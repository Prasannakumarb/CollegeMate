package com.fyshadows.collegemate;

import java.util.ArrayList;
import java.util.List;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.app.ProgressDialog;
import android.os.AsyncTask;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v7.app.ActionBarActivity;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.Spinner;

public class StudentCollegeregistration extends ActionBarActivity {
	 private String URL_getColleges = "http://fyshadows.com/CollegeMate/getcollegedetails.php";
	 private String URL_getCourses = "http://fyshadows.com/CollegeMate/getcoursedetails.php";
	 private String URL_getdepartments = "http://fyshadows.com/CollegeMate/getdepartmentdetails.php";
	
	 private Spinner spinnerCollege;
	 private ArrayList<Collegedetails> collegeList;
	 
	 private Spinner spinnerCourse;
	 private ArrayList<Coursedetails> courseList;
	 
	 private Spinner spinnerDepart;
	 private ArrayList<Departmentdetails> departList;
	    ProgressDialog pDialog;
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_student_collegeregistration);

		if (savedInstanceState == null) {
			getSupportFragmentManager().beginTransaction()
					.add(R.id.container, new PlaceholderFragment()).commit();
		}
		spinnerCollege= (Spinner) findViewById(R.id.spincollege);
		collegeList = new ArrayList<Collegedetails>();
		new GetColleges().execute(); 
		
		spinnerCourse= (Spinner) findViewById(R.id.spincourse);
		courseList = new ArrayList<Coursedetails>();
		new Getcourses().execute(); 
		
		spinnerDepart= (Spinner) findViewById(R.id.spindepart);
		departList = new ArrayList<Departmentdetails>();
		new GetDepartment().execute(); 
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {

		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.student_collegeregistration, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// Handle action bar item clicks here. The action bar will
		// automatically handle clicks on the Home/Up button, so long
		// as you specify a parent activity in AndroidManifest.xml.
		int id = item.getItemId();
		if (id == R.id.action_settings) {
			return true;
		}
		return super.onOptionsItemSelected(item);
	}

	/**
	 * A placeholder fragment containing a simple view.
	 */
	public static class PlaceholderFragment extends Fragment {

		public PlaceholderFragment() {
		}

		@Override
		public View onCreateView(LayoutInflater inflater, ViewGroup container,
				Bundle savedInstanceState) {
			View rootView = inflater.inflate(
					R.layout.fragment_student_collegeregistration, container,
					false);
			return rootView;
		}
	}
		/**
	     * Adding spinner data
	     * */
	    private void populateSpinner() {
	        List<String> lables = new ArrayList<String>();
	         
	      
	 
	        for (int i = 0; i < collegeList.size(); i++) {
	            lables.add(collegeList.get(i).getName());
	        }
	 
	        // Creating adapter for spinner
	        ArrayAdapter<String> spinnerAdapter = new ArrayAdapter<String>(this,
	                android.R.layout.simple_spinner_item, lables);
	 
	        // Drop down layout style - list view with radio button
	        spinnerAdapter
	                .setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
	 
	        // attaching data adapter to spinner
	        spinnerCollege.setAdapter(spinnerAdapter);
	    }
	    
	    
	    
	    private void populateCourseSpinner() {
	        List<String> lables = new ArrayList<String>();

	        for (int i = 0; i < courseList.size(); i++) {
	            lables.add(courseList.get(i).getName());
	        }
	 
	        // Creating adapter for spinner
	        ArrayAdapter<String> spinnerAdapter = new ArrayAdapter<String>(this,
	                android.R.layout.simple_spinner_item, lables);
	 
	        // Drop down layout style - list view with radio button
	        spinnerAdapter
	                .setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
	 
	        // attaching data adapter to spinner
	        spinnerCourse.setAdapter(spinnerAdapter);
	    }
	 
	    
	    private void populateDepartSpinner() {
	        List<String> lables = new ArrayList<String>();

	        for (int i = 0; i < departList.size(); i++) {
	            lables.add(departList.get(i).getName());
	        }
	 
	        // Creating adapter for spinner
	        ArrayAdapter<String> spinnerAdapter = new ArrayAdapter<String>(this,
	                android.R.layout.simple_spinner_item, lables);
	 
	        // Drop down layout style - list view with radio button
	        spinnerAdapter
	                .setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
	 
	        // attaching data adapter to spinner
	        spinnerDepart.setAdapter(spinnerAdapter);
	    }
	    /**
	     * Async task to get all food categories
	     * */
	    private class GetColleges extends AsyncTask<Void, Void, Void> {
	 
	        @Override
	        protected void onPreExecute() {
	            super.onPreExecute();
	            pDialog = new ProgressDialog(StudentCollegeregistration.this);
	            pDialog.setMessage("Fetching Colleges..");
	            pDialog.setCancelable(false);
	            pDialog.show();
	 
	        }
	 
	        @Override
	        protected Void doInBackground(Void... arg0) {
	            ServiceHandler jsonParser = new ServiceHandler();
	            String json = jsonParser.makeServiceCall(URL_getColleges, ServiceHandler.GET);
	 
	            Log.e("Response: ", "> " + json);
	 
	            if (json != null) {
	                try {
	                    JSONObject jsonObj = new JSONObject(json);
	                    if (jsonObj != null) {
	                        JSONArray categories = jsonObj
	                                .getJSONArray("collegeName");                        
	 
	                        for (int i = 0; i < categories.length(); i++) {
	                            JSONObject catObj = (JSONObject) categories.get(i);
	                            Collegedetails cat = new Collegedetails(catObj.getInt("id"),
	                                    catObj.getString("name"));
	                            collegeList.add(cat);
	                        }
	                    }
	 
	                } catch (JSONException e) {
	                    e.printStackTrace();
	                }
	 
	            } else {
	                Log.e("JSON Data", "Didn't receive any data from server!");
	            }
	 
	            return null;
	        }
	 
	        @Override
	        protected void onPostExecute(Void result) {
	            super.onPostExecute(result);
	            //if (pDialog.isShowing())
	              //  pDialog.dismiss();
	            populateSpinner();
	        }
	 
	    }
	    
	    //To get courses details
	    
	    private class Getcourses extends AsyncTask<Void, Void, Void> {
		   	 
	        @Override
	        protected void onPreExecute() {
	            super.onPreExecute();
	           // pDialog = new ProgressDialog(StudentCollegeregistration.this);
	          /// pDialog.setMessage("Fetching Courses..");
	           // pDialog.setCancelable(false);
	           // pDialog.show();
	 
	        }
	 
	        @Override
	        protected Void doInBackground(Void... arg0) {
	            ServiceHandler jsonParser = new ServiceHandler();
	            String json = jsonParser.makeServiceCall(URL_getCourses, ServiceHandler.GET);
	 
	            Log.e("Response: ", "> " + json);
	 
	            if (json != null) {
	                try {
	                    JSONObject jsonObj = new JSONObject(json);
	                    if (jsonObj != null) {
	                        JSONArray categories = jsonObj
	                                .getJSONArray("courseName");                        
	 
	                        for (int i = 0; i < categories.length(); i++) {
	                            JSONObject catObj = (JSONObject) categories.get(i);
	                            Coursedetails cat = new Coursedetails(catObj.getInt("id"),
	                                    catObj.getString("name"));
	                            courseList.add(cat);
	                        }
	                    }
	 
	                } catch (JSONException e) {
	                    e.printStackTrace();
	                }
	 
	            } else {
	                Log.e("JSON Data", "Didn't receive any data from server!");
	            }
	 
	            return null;
	        }
	 
	        @Override
	        protected void onPostExecute(Void result) {
	            super.onPostExecute(result);
	            //if (pDialog.isShowing())
	              //  pDialog.dismiss();
	            populateCourseSpinner();
	        }
	 
	    }

	    //To get department details
	    private class GetDepartment extends AsyncTask<Void, Void, Void> {
	   	 
	        @Override
	        protected void onPreExecute() {
	            super.onPreExecute();
	           /// pDialog = new ProgressDialog(StudentCollegeregistration.this);
	            //pDialog.setMessage("Fetching Colleges..");
	            //pDialog.setCancelable(false);
	           // pDialog.show();
	 
	        }
	 
	        @Override
	        protected Void doInBackground(Void... arg0) {
	            ServiceHandler jsonParser = new ServiceHandler();
	            String json = jsonParser.makeServiceCall(URL_getdepartments, ServiceHandler.GET);
	 
	            Log.e("Response: ", "> " + json);
	 
	            if (json != null) {
	                try {
	                    JSONObject jsonObj = new JSONObject(json);
	                    if (jsonObj != null) {
	                        JSONArray categories = jsonObj
	                                .getJSONArray("DepartName");                        
	 
	                        for (int i = 0; i < categories.length(); i++) {
	                            JSONObject catObj = (JSONObject) categories.get(i);
	                            Departmentdetails cat = new Departmentdetails(catObj.getInt("id"),
	                                    catObj.getString("name"));
	                            departList.add(cat);
	                        }
	                    }
	 
	                } catch (JSONException e) {
	                    e.printStackTrace();
	                }
	 
	            } else {
	                Log.e("JSON Data", "Didn't receive any data from server!");
	            }
	 
	            return null;
	        }
	 
	        @Override
	        protected void onPostExecute(Void result) {
	            super.onPostExecute(result);
	            if (pDialog.isShowing())
	                pDialog.dismiss();
	            populateDepartSpinner();
	        }
	 
	    }

}
